// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxy_register.proto

// package name

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// request
type RegisterRequest struct {
	// grpc service name, name is '_XXXService_serviceDesc.ServiceName'
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// endpoint for service
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// enable service or not
	Enable               bool     `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_de8d6ae9acf7f7ea, []int{0}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *RegisterRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *RegisterRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

// response
type RegisterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_de8d6ae9acf7f7ea, []int{1}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "grpc.proxy.v1.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "grpc.proxy.v1.RegisterResponse")
}

func init() { proto.RegisterFile("proxy_register.proto", fileDescriptor_de8d6ae9acf7f7ea) }

var fileDescriptor_de8d6ae9acf7f7ea = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0xaf,
	0xa8, 0x8c, 0x2f, 0x4a, 0x4d, 0xcf, 0x2c, 0x2e, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x4d, 0x2f, 0x2a, 0x48, 0xd6, 0x03, 0x4b, 0xe9, 0x95, 0x19, 0x2a, 0x65, 0x70, 0xf1,
	0x07, 0x41, 0x15, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x29, 0x72, 0xf1, 0x14, 0xa7,
	0x16, 0x95, 0x65, 0x26, 0xa7, 0xc6, 0xe7, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x71, 0x43, 0xc5, 0xfc, 0x12, 0x73, 0x53, 0x85, 0xa4, 0xb8, 0x38, 0x52, 0xf3, 0x52, 0x0a,
	0xf2, 0x33, 0xf3, 0x4a, 0x24, 0x98, 0xc0, 0xd2, 0x70, 0xbe, 0x90, 0x18, 0x17, 0x5b, 0x6a, 0x5e,
	0x62, 0x52, 0x4e, 0xaa, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x47, 0x10, 0x94, 0xa7, 0x24, 0xc4, 0x25,
	0x80, 0xb0, 0xa9, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0xd5, 0x28, 0x95, 0x4b, 0x24, 0x00, 0xe4, 0x12,
	0x98, 0x44, 0x30, 0xc4, 0x0e, 0x21, 0x5f, 0x2e, 0x0e, 0x98, 0x90, 0x90, 0x9c, 0x1e, 0x8a, 0x8b,
	0xf5, 0xd0, 0x9c, 0x2b, 0x25, 0x8f, 0x53, 0x1e, 0x62, 0x89, 0x12, 0x83, 0x13, 0x4b, 0x14, 0x53,
	0x99, 0x61, 0x12, 0x1b, 0x38, 0x00, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x81, 0x57,
	0x71, 0x18, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyRegisterServiceClient is the client API for ProxyRegisterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyRegisterServiceClient interface {
	// register rpc
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
}

type proxyRegisterServiceClient struct {
	cc *grpc.ClientConn
}

func NewProxyRegisterServiceClient(cc *grpc.ClientConn) ProxyRegisterServiceClient {
	return &proxyRegisterServiceClient{cc}
}

func (c *proxyRegisterServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/grpc.proxy.v1.ProxyRegisterService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyRegisterServiceServer is the server API for ProxyRegisterService service.
type ProxyRegisterServiceServer interface {
	// register rpc
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
}

// UnimplementedProxyRegisterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProxyRegisterServiceServer struct {
}

func (*UnimplementedProxyRegisterServiceServer) Register(ctx context.Context, req *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterProxyRegisterServiceServer(s *grpc.Server, srv ProxyRegisterServiceServer) {
	s.RegisterService(&_ProxyRegisterService_serviceDesc, srv)
}

func _ProxyRegisterService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyRegisterServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.proxy.v1.ProxyRegisterService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyRegisterServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxyRegisterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.proxy.v1.ProxyRegisterService",
	HandlerType: (*ProxyRegisterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _ProxyRegisterService_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proxy_register.proto",
}
